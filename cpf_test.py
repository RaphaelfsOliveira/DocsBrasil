import unittest
from cpf import *

#test CPF
cpfv = [
'155.224.602-70',
'096.928.714-36',
'336.545.434-99',
'154.791.423-80',
'045.222.735-68',
'104.928.286-87',
'377.303.386-96',
'475.236.770-02',
'257.084.028-90',
'156.640.558-04',
'062.407.756-06',
'581.658.886-92',
'353.250.244-50',
'312.484.796-29',
'564.792.233-30',
'625.166.553-04',
'546.147.811-52',
'657.356.255-00',
'657.356.255-00',
'036.449.345-33',
'846.766.553-04',
'837.433.754-00',
'410.905.589-02',
'808.563.023-09']

cpff = [
'00000000000',
'11111111111',
'88888888888',
'555.555.555-55',
'657.356.255-01',
'657.356.355-00',
'036.447.345-33',
'846.766.553-14',
'837.413.754-00',
'411.905.589-02',
'809.563.023-09',
'096.927.714-36',
'336.575.434-99',
'154.792.423-80',
'047.222.735-68',
'104.928.286-89']


class TestCpfMethods(unittest.TestCase):
	"""Testes com CPFs validos e CPFs
	não validos e numerações inexistentes"""
	def test_cpf_valid(self):
		for cpf in cpfv:
			self.assertEqual(cpf_valid(cpf), True)

	def test_cpf_error(self):
		for cpf in cpff:
			self.assertEqual(cpf_valid(cpf), False)

		

if __name__ == "__main__":
	#testes CPF
	unittest.main()
